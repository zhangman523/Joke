apply plugin: 'com.android.application'

def releaseTime() {
  return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.2"

  defaultConfig {
    applicationId "com.zxf.joke"
    minSdkVersion 14
    targetSdkVersion 23
    versionCode 1
    versionName "1.0"
    buildConfigField "String", "JUHE_KEY", "\"" + JUHE_KEY + "\""
  }

  signingConfigs {
    //指定名叫release的一个签名对象 会在下面的脚本中，动态根据配置文件设置属性
    release
  }
  buildTypes {
    debug {}

    release {
      //设置是否混淆
      minifyEnabled false
      //设置压缩对齐
      zipAlignEnabled true
      //移除无用的资源文件
      shrinkResources true
      //设置混淆配置文件
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      //如果签名配置不为空 则设置签名信息
      if (signingConfigs.release != null) {
        signingConfig signingConfigs.release
      }
      //指定签名包得输入文件名称
      applicationVariants.all { variant ->
        variant.outputs.each { output ->
          def outputFile = output.outputFile
          if (outputFile != null && outputFile.name.endsWith('.apk')) {
            // 输出apk名称为Joke_v1.0_2015-01-15_wandoujia.apk
            def fileName = "Joke_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
            output.outputFile = new File(outputFile.parent, fileName)
          }
        }
      }
    }
  }
  productFlavors {
    beta {
      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "beta", UMENG_KEY: GRADLE_UMENG_KEY]
    }
    xiaomi {
      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi", UMENG_KEY: GRADLE_UMENG_KEY]
    }
    m360 {
      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "m360", UMENG_KEY: GRADLE_UMENG_KEY]
    }
    wandoujia {
      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia", UMENG_KEY: GRADLE_UMENG_KEY]
    }
    fir {
      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "fir", UMENG_KEY: GRADLE_UMENG_KEY]
    }
    umeng {
      manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng", UMENG_KEY: GRADLE_UMENG_KEY]
    }
  }
}
//set release sign info synchronously
def Properties props = new Properties()
def propFile = file('../gradle.properties')
if (propFile.canRead()) {
  props.load(new FileInputStream(propFile))
  if (props != null &&
      props.containsKey('SIGN_FILE') &&
      props.containsKey('SIGN_KEYSTORE_PASS') &&
      props.containsKey('SIGN_KEYSTORE_ALIAS') &&
      props.containsKey('SIGN_KEYSTORE_ALIAS_PASS')) {
    println 'release build signing'
    android.signingConfigs.release.storeFile = file(props['SIGN_FILE'])
    android.signingConfigs.release.storePassword = props['SIGN_KEYSTORE_PASS']
    android.signingConfigs.release.keyAlias = props['SIGN_KEYSTORE_ALIAS']
    android.signingConfigs.release.keyPassword = props['SIGN_KEYSTORE_ALIAS_PASS']
  } else {
    println 'release build not found signing properties'
    android.buildTypes.release.signingConfig = null
  }
} else {
  println 'release build not found signing file'
  android.buildTypes.release.signingConfig = null
}
dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  testCompile 'junit:junit:4.12'
  compile 'com.android.support:appcompat-v7:23.2.1'
  compile 'com.android.support:design:23.2.1'
  compile 'com.squareup.okhttp:okhttp:2.5.0'
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  compile 'io.reactivex:rxandroid:1.0.0'
  compile 'com.jakewharton:butterknife:7.0.1'
  compile 'com.umeng.analytics:analytics:latest.integration'
  compile 'com.android.support:recyclerview-v7:23.2.1'
  compile 'com.android.support:cardview-v7:23.2.1'
  compile 'com.facebook.fresco:fresco:0.9.0'
  compile 'cn.edu.zafu:coreprogress:0.0.1'
  compile 'com.github.niorgai:StatusBarCompat:1.0.1'
}
